title: Skupper Hello World
subtitle: A minimal HTTP application deployed across Kubernetes clusters using Skupper
overview: |
  This example is a very simple multi-service HTTP application
  deployed across Kubernetes clusters using Skupper.

  It contains two services:

  * A backend service that exposes an `/api/hello` endpoint.  It
    returns greetings of the form `Hi, <your-name>.  I am <my-name>
    (<pod-name>)`.

  * A frontend service that sends greetings to the backend and
    fetches new greetings in response.

  With Skupper, you can place the backend in one cluster and the
  frontend in another and maintain connectivity between the two
  services without exposing the backend to the public internet.

  <img src="images/entities.svg" width="640"/>
sites:
  west:
    title: West
    platform: kubernetes
    namespace: west
    env:
      KUBECONFIG: ~/.kube/config-west
  east:
    title: East
    platform: kubernetes
    namespace: east
    env:
      KUBECONFIG: ~/.kube/config-east
steps:
  - standard: general/install_the_skupper_command_line_tool
  - standard: kubernetes/set_up_your_clusters
  - standard: hello_world/deploy_the_frontend_and_backend
  - standard: kubernetes/create_your_sites
  - standard: kubernetes/link_your_sites
  - standard: hello_world/expose_the_backend
  - title: Deploy the frontend and backend
    preamble: |
      This example runs the frontend and the backend in separate
      Kubernetes namespaces, on different clusters.

      Use `kubectl create deployment` to deploy the http-server in both sites.
    commands:
      west:
        - run: kubectl create deployment http-server --image quay.io/skupper/skupper-http-server
          output: " "

      east:
        - run: kubectl create deployment http-server --image quay.io/skupper/skupper-http-server
          output: " "

  - title: Create a service with server targets on both sites
    preamble: |
      Use `skupper service create` to create a service.

      Use `skupper service bind` to associate the service with servers on both sites.
    commands:
      west:
        - await_resource: deployment/http-server
        - run: skupper service create http-server 8080
          output: " "
        - run: skupper service bind http-server deployment http-server
          output: " "
      east:
        - await_resource: deployment/http-server
        - run: skupper service status
          output: " "
        - run: skupper service bind http-server deployment http-server
          output: " "

        - run: skupper service bind http-server deployment http-server
          output: " "
    postamble: |
      A `http-server` service is not available.

  - standard: hello_world/access_the_frontend
  - standard: hello_world/cleaning_up
summary: |
  This example locates the frontend and backend services in different
  namespaces, on different clusters.  Ordinarily, this means that they
  have no way to communicate unless they are exposed to the public
  internet.

  Introducing Skupper into each namespace allows us to create a virtual
  application network that can connect services in different clusters.
  Any service exposed on the application network is represented as a
  local service in all of the linked namespaces.

  The backend service is located in `east`, but the frontend service
  in `west` can "see" it as if it were local.  When the frontend
  sends a request to the backend, Skupper forwards the request to the
  namespace where the backend is running and routes the response back to
  the frontend.

  <img src="images/sequence.svg" width="640"/>
